public class DoubleStack {
    
        private int maxSize;
        private double[] dStack;
        private int top;
    
        public DoubleStack(int size)
        {
            maxSize = size;
            dStack = new double[maxSize];
            top = 0;
        }
        
        public void push(double j) {
            
            dStack[top++] = j; 
        }
        
        public double pop()
        { 
            return dStack[--top]; 
        
        }
        
        public double peek()
        { 
            return dStack[top - 1]; 
        }
        
        public boolean isEmpty()
        { 
            return (top == 0); 
        }
        
        public boolean isFull()
        {
            
            return (top - 1 == maxSize);
        }
        
        public int size()
        { 
            
            return top;
        }
        
        public double peekN(int n)
        { 
            
            return dStack[n];
        }
        
        public void displayStack(String s)
        {
            System.out.print(s);
            System.out.print("Stack (bottom-->top): ");
            for(int j=0; j<size(); j++)
            {
                System.out.print( peekN(j) );
                System.out.print(' ');
            }
            System.out.println("");
        }
}
    
